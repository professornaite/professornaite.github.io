---
title: "Fatal Force"
subtitle: "Written by Nathan Alexander and Hye Ryeon Jang"
---

## Introduction
The `Fatal Force` branch project is one of the core data explorations for our lab members. 

We are integrating a critical modeling theory (CMT) with a few different data sets to develop a database that will allow our current and future lab members to answer questions about racialized systems, history, and policing at various levels.

Here, we offer introductory code used to welcome new members to our lab. Shout out to new members!

### Task 0: Preliminaries

Before any data tasks, you will need to develop a practice to developing your expertise for our project. The best way to do this is to progressively build your understanding of the research literature in this area. Please take 5 minutes to read through a new annotation [here](https://docs.google.com/document/d/1Px7ZqAVGPz_B2i2vURRxIhVweMLPIyiX8fGLKRArhjY/edit?usp=drive_link).

### Task 1: Launch a new project

First, we'll generate a new project. Please open your RStudio IDE.

Navigate to the following: File > New Project

A new window will open. In this new window, you will need to name your project. As a group, we decided to name the project `fatalv2' (thanks, Kyshan!) since we will be analyzing the second version of the fatal force data set.

#### Task 1-a: Clear objects from your envioronment

```{r}
rm(list=ls())
```


### Task 2: Load your packages
If you haven't already, you'll need to load the tidyverse package.

```{r}
#| echo: true
#| warning: false
#| output: false
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
```

### Task 3: Load your libraries
We will use a set of specific libraries in the packages that we just loaded. In the `tidyverse` package, there are some libraries that we'll need to bring in our data as a .csv file; so we'll load the entire library.

```{r}
#| echo: true
#| output: false
#| warning: false
library(tidyverse)
```

### Task 4: Import your data

Please navigate to the website for the raw code that we'll bring into R.

We want to bring data directly in from the github repository

This data is from the GitHub for Washington Post[^1].
[^1]: https://github.com/washingtonpost

```{r}
#| echo: true
#| output: false
#| warning: false
# import your data using the read.csv command
fatal_raw <- read.csv("https://raw.githubusercontent.com/washingtonpost/data-police-shootings/master/v2/fatal-police-shootings-data.csv")
```

### Task 5: View your data

```{r}
fatal <- as_tibble(fatal_raw)
fatal
```


#### Task 5-a: View the top of your data using the `head` function

```{r}
head(fatal)
```

#### Task 5-a: Change the observations viewed by adding `n` to `head` function

```{r}
head(fatal, n=10)
```

#### Task 5-b: View the bottom of your data using the `tail` function

```{r}
tail(fatal)
```

#### Task 5-b: Change the observations viewed by adding `n` to `tail` function

```{r}
tail(fatal, n=10)
```

#### Task 6: Get a summary of your data

```{r}
summary(fatal)
```



#### Task 7: Get a glimpse of your data

```{r}
glimpse(fatal)
```

#### Task 8: Get the dimensions of your data

```{r}
dim(fatal)
```

#### Task 9: Select a numeric varaible to get a summary

```{r}
summary(fatal$age)
```

Take note of the missing values. This tells us we need to clean up our data a bit.

#### Task 10: Drop missing values over the entire data set

```{r}
fatal <- na.omit(fatal)
summary(fatal$age)
```

#### Task 11: Take another look at your data

What main differences do you notice in the summary of your data?

```{r}
summary(fatal)
```

#### Task 12: Get a tabular summary of a logic variable

```{r}
table(fatal$body_camera)
```

#### Task 13: Get a tabular summary of a categorical variable


```{r}
table(fatal$gender)
```

#### Task 14: Create a histogram of the age variable


```{r}
hist(fatal$age)
```

#### Task 15: Improve your histogram with some addtiional code

```{r}
hist(fatal$age,
     xlab = "Age of Police Shooting Victims",
     main = "")
abline(h = 0, col = "gray60")
box()
```

#### Task 16: View a density plot of the age variable

```{r}
plot(density(fatal$age),
     xlab = "Age of Police Shooting Victims",
     main = "")
box()
```


#### Task 17: View a boxplot of the age varaible

```{r}
 boxplot(fatal$age,
        ylab = "Age of Police Shooting Victims")
```

#### Task 18: Make a fancier boxplot

```{r}
 boxplot(fatal$age,
        ylab = "Age of Police Shooting Victims",
        col = "orange")
```


#### Task 19: Create a table of a qualitative variable

```{r}
 race <- table(fatal$race)
barplot(race)
```


#### Group task: Lets work on fixing this chart together

```{r}

par(mar=c(5, 6, 5, 4))
barplot(race,
        horiz = T,
        xlim = c(0,130),
        las = 1,
        main = "Racial Distribution of Fatal Police Shooting Victims",
        xlab = "Number of Victims",
        col = rainbow(5))
text(x=race,
     y=c(0.7, 1.9, 3.1, 4.3, 5.5),
     labels = paste(race), pos = 4)
box()
```